name: Run Selenium Tests with Headless Chrome

on:
  push:
    branches:
      - main  # Trigger action for PRs targeting the main branch
      - 'feature/*'  # Trigger for any feature branch as well
  pull_request:
    branches:
      - main  # Trigger for PRs targeting the main branch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the current repository code
      - name: Checkout current repository code
        uses: actions/checkout@v2

      # Checkout the repository containing the tests
      - name: Checkout the automation repository
        uses: actions/checkout@v2
        with:
          repository: "AbhishekTDigital/automation"
          path: automation  # Clone the automation repository in the "automation" directory

      # Set up Java (Maven needs JDK to run)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'  # Specify distribution like AdoptOpenJDK or Zulu

      # Cache Maven dependencies for faster builds
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Set up Chrome and ChromeDriver for Selenium tests
      - name: Set up Headless Chrome
        uses: actions/setup-chromium@v2
        with:
          chromium-version: 'latest'  # Set the latest stable version of Chromium
          chrome-driver-version: 'latest'  # Set the latest version of ChromeDriver

      # Set up environment variables for Selenium to use Chrome in headless mode
      - name: Set up display for headless Chrome
        run: |
          export DISPLAY=:99.0
          Xvfb :99 &  # Set up the virtual display (Xvfb)
          apt-get install -y libx11-dev libgdk-pixbuf2.0-0 libnspr4 libnss3  # Install dependencies for Chrome

      # Run Selenium tests using Maven in the "automation" directory
      - name: Compile and run FirstPage
        run: |
          cd automation  # Navigate into the "automation" repo
          mvn clean test -Dtest=React_App.Testing.FirstPage  # Run the specific test class

      # Fail the workflow if tests fail
      - name: Check test results
        run: |
          if [ $? -ne 0 ]; then
            echo "Tests failed. Exiting workflow."
            exit 1
          fi
        shell: bash
